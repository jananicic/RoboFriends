{"map":"{\"version\":3,\"sources\":[\"/Users/jan/programiranje/robofriends/src/components/Card.js\",\"/Users/jan/programiranje/robofriends/src/components/CardList.js\",\"/Users/jan/programiranje/robofriends/src/components/SearchBox.js\",\"/Users/jan/programiranje/robofriends/src/components/Scroll.js\",\"/Users/jan/programiranje/robofriends/src/containers/App.js\",\"/Users/jan/programiranje/robofriends/src/actions.js\",\"/Users/jan/programiranje/robofriends/src/constants.js\",\"/Users/jan/programiranje/robofriends/src/reducers.js\",\"/Users/jan/programiranje/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"id\",\"name\",\"email\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"element\",\"i\",\"components_Card\",\"SearchBox\",\"searchchange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"this\",\"onRequestRobots\",\"_this$props\",\"searchField\",\"onSearchChange\",\"isPending\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"connect\",\"state\",\"searchRobots\",\"requestRobots\",\"ispending\",\"error\",\"dispatch\",\"event\",\"payload\",\"target\",\"value\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"catch\",\"initStateSearch\",\"initStateRobots\",\"rootReducer\",\"combineReducers\",\"arguments\",\"length\",\"undefined\",\"action\",\"Object\",\"assign\",\"console\",\"log\",\"logger\",\"createLogger\",\"store\",\"createStore\",\"applyMiddleware\",\"thunkMiddleware\",\"ReactDOM\",\"render\",\"react_redux_es\",\"containers_App\",\"document\",\"getElementById\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({id, name, email}) => {\\n    return (\\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\n            <img alt={name} src={`https://robohash.org/${id}/200x200`}/>\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n    return (\\n        <div>\\n           {\\n            robots.map((element, i) => {\\n                return < Card \\n                    id={robots[i].id} \\n                    name={robots[i].name} \\n                    email={robots[i].email}\\n                />\\n            })\\n           }\\n        </div>\\n    );\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({searchchange}) => {\\n    return(\\n        <input \\n            className='pa3 ba b--green bg-lightest-blue' \\n            type='search' placeholder='search robots' \\n            onChange={searchchange}\\n        />\\n    );\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n    return (\\n        <div style={{overflowY: 'scroll', border: '1px black solid', height: '800px'}}>\\n            {props.children}\\n        </div>\\n    );\\n}\\n\\nexport default Scroll;\",\"import React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\nimport { setSearchField, requestRobots } from '../actions';\\n\\nconst mapStateToProps = state => ({\\n    searchField: state.searchRobots.searchField,\\n    robots: state.requestRobots.robots,\\n    isPending: state.requestRobots.ispending,\\n    error: state.requestRobots.error\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\\n    onRequestRobots: () => dispatch(requestRobots())\\n});\\n\\nclass App extends Component {\\n    componentDidMount() {\\n        this.props.onRequestRobots();\\n    }\\n    \\n    render() {\\n        const { searchField, onSearchChange, robots, isPending } = this.props\\n        const filteredRobots = robots.filter(robot => {\\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\\n        })\\n\\n        return(\\n            isPending ? <h1>LOADING!</h1> :\\n            <div className='tc'>\\n                <h1>RoboFriends</h1>\\n                <SearchBox searchchange={onSearchChange}/>\\n                <Scroll>\\n                    <CardList robots={filteredRobots} />\\n                </Scroll>\\n            </div>    \\n        );\\n    }\\n}\\n\\nexport default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n)(App);\",\"import { \\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED\\n} from './constants.js';\\n\\nexport const setSearchField = text => ({\\n    type: CHANGE_SEARCH_FIELD,\\n    payload: text\\n})\\n\\nexport const requestRobots = () => dispatch => {\\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\\n    fetch('https://jsonplaceholder.typicode.com/users')\\n    .then(response => response.json())\\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\\n}\\n\\n/*export const requestRobots = () => ({\\n    type: REQUEST_ROBOTS_SUCCESS,\\n    payload: [{\\n        name: 'bla'\\n    }]\\n})*/\",\"export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\\n\\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\",\"import { \\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED\\n} from './constants.js';\\n\\nconst initStateSearch = {\\n    searchField: ''\\n}\\n\\nexport const searchRobots = (state = initStateSearch, action = {}) => {\\n    switch(action.type) {\\n        case CHANGE_SEARCH_FIELD:\\n            return Object.assign({}, state, {searchField: action.payload});\\n        default:\\n            return state;\\n    }\\n}\\n\\nconst initStateRobots = {\\n    isPending: false,\\n    robots: [],\\n    error: ''\\n}\\n\\nexport const requestRobots = (state = initStateRobots, action = {}) => {\\n    console.log('payload ' + action.payload);\\n    switch(action.type){\\n        case REQUEST_ROBOTS_PENDING:\\n            return Object.assign({}, state, {isPending: true});\\n        case REQUEST_ROBOTS_SUCCESS:\\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\\n        case REQUEST_ROBOTS_FAILED:\\n            return Object.assign({}, state, {error: action.payload, isPending: false});\\n        default:\\n        return state;\\n    }\\n}\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport thunkMiddleware from 'redux-thunk';\\nimport App from './containers/App';\\nimport { Provider } from 'react-redux';\\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\\nimport { createLogger } from 'redux-logger';\\nimport { searchRobots, requestRobots } from './reducers';\\nimport './index.css';\\nimport 'tachyons';\\n\\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\\nconst logger = createLogger();\\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <App/>\\n    </Provider>\\n, document.getElementById('root'));\\n\\nregisterServiceWorker();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{19:function(e,t,n){e.exports=n(32)},28:function(e,t,n){},32:function(e,t,n){\"use strict\";n.r(t);var r=n(0),a=n.n(r),o=n(9),c=n.n(o),s=n(10),i=n(11),l=n(12),u=n(17),d=n(13),h=n(18),b=n(3),p=function(e){var t=e.id,n=e.name,r=e.email;return a.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},a.a.createElement(\"img\",{alt:n,src:\"https://robohash.org/\".concat(t,\"/200x200\")}),a.a.createElement(\"div\",null,a.a.createElement(\"h2\",null,n),a.a.createElement(\"p\",null,r)))},E=function(e){var t=e.robots;return a.a.createElement(\"div\",null,t.map(function(e,n){return a.a.createElement(p,{id:t[n].id,name:t[n].name,email:t[n].email})}))},g=function(e){var t=e.searchchange;return a.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:t})},m=function(e){return a.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px black solid\",height:\"800px\"}},e.children)},f=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(l.a)(t,[{key:\"componentDidMount\",value:function(){this.props.onRequestRobots()}},{key:\"render\",value:function(){var e=this.props,t=e.searchField,n=e.onSearchChange,r=e.robots,o=e.isPending,c=r.filter(function(e){return e.name.toLowerCase().includes(t.toLowerCase())});return o?a.a.createElement(\"h1\",null,\"LOADING!\"):a.a.createElement(\"div\",{className:\"tc\"},a.a.createElement(\"h1\",null,\"RoboFriends\"),a.a.createElement(g,{searchchange:n}),a.a.createElement(m,null,a.a.createElement(E,{robots:c})))}}]),t}(r.Component),O=Object(b.b)(function(e){return{searchField:e.searchRobots.searchField,robots:e.requestRobots.robots,isPending:e.requestRobots.ispending,error:e.requestRobots.error}},function(e){return{onSearchChange:function(t){return e({type:\"CHANGE_SEARCH_FIELD\",payload:t.target.value})},onRequestRobots:function(){return e(function(e){e({type:\"REQUEST_ROBOTS_PENDING\"}),fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(t){return e({type:\"REQUEST_ROBOTS_SUCCESS\",payload:t})}).catch(function(t){return e({type:\"REQUEST_ROBOTS_FAILED\",payload:t})})})}}})(f),R=n(2),S=n(16),v={searchField:\"\"},y={isPending:!1,robots:[],error:\"\"},j=(n(28),n(30),Object(R.c)({searchRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:v,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(t.type){case\"CHANGE_SEARCH_FIELD\":return Object.assign({},e,{searchField:t.payload});default:return e}},requestRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(console.log(\"payload \"+t.payload),t.type){case\"REQUEST_ROBOTS_PENDING\":return Object.assign({},e,{isPending:!0});case\"REQUEST_ROBOTS_SUCCESS\":return Object.assign({},e,{robots:t.payload,isPending:!1});case\"REQUEST_ROBOTS_FAILED\":return Object.assign({},e,{error:t.payload,isPending:!1});default:return e}}})),_=Object(S.createLogger)(),w=Object(R.d)(j,Object(R.a)(s.a,_));c.a.render(a.a.createElement(b.a,{store:w},a.a.createElement(O,null)),document.getElementById(\"root\")),registerServiceWorker()}},[[19,2,1]]]);","extractedComments":[]}