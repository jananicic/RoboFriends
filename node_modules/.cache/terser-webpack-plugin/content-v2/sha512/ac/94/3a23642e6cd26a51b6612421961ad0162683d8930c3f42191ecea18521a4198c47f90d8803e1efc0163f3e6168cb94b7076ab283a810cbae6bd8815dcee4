{"map":"{\"version\":3,\"sources\":[\"/Users/jan/programiranje/robofriends/src/components/Card.js\",\"/Users/jan/programiranje/robofriends/src/components/CardList.js\",\"/Users/jan/programiranje/robofriends/src/components/SearchBox.js\",\"/Users/jan/programiranje/robofriends/src/components/Scroll.js\",\"/Users/jan/programiranje/robofriends/src/containers/App.js\",\"/Users/jan/programiranje/robofriends/src/actions.js\",\"/Users/jan/programiranje/robofriends/src/constants.js\",\"/Users/jan/programiranje/robofriends/src/reducers.js\",\"/Users/jan/programiranje/robofriends/src/registerServiceWorker.js\",\"/Users/jan/programiranje/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"id\",\"name\",\"email\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"element\",\"i\",\"components_Card\",\"SearchBox\",\"searchchange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflowY\",\"border\",\"height\",\"children\",\"App\",\"this\",\"onRequestRobots\",\"_this$props\",\"searchField\",\"onSearchChange\",\"isPending\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"connect\",\"state\",\"searchRobots\",\"requestRobots\",\"ispending\",\"error\",\"dispatch\",\"event\",\"payload\",\"target\",\"value\",\"fetch\",\"then\",\"response\",\"json\",\"data\",\"catch\",\"initStateSearch\",\"initStateRobots\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"rootReducer\",\"combineReducers\",\"arguments\",\"length\",\"undefined\",\"action\",\"Object\",\"assign\",\"logger\",\"createLogger\",\"store\",\"createStore\",\"applyMiddleware\",\"thunkMiddleware\",\"ReactDOM\",\"render\",\"react_redux_es\",\"containers_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"oPAceA,EAZF,SAAAC,GAAuB,IAArBC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,MACrB,OACIC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,uDACXH,EAAAC,EAAAC,cAAA,MAAA,CAAKE,IAAKN,EAAMO,IAAG,wBAAAC,OAA0BT,EAA1B,cACnBG,EAAAC,EAAAC,cAAA,MAAA,KACIF,EAAAC,EAAAC,cAAA,KAAA,KAAKJ,GACLE,EAAAC,EAAAC,cAAA,IAAA,KAAIH,MCWLQ,EAhBE,SAAAX,GAAgB,IAAbY,EAAaZ,EAAbY,OAChB,OACIR,EAAAC,EAAAC,cAAA,MAAA,KAEIM,EAAOC,IAAI,SAACC,EAASC,GACjB,OAAOX,EAAAC,EAAAC,cAAEU,EAAF,CACHf,GAAIW,EAAOG,GAAGd,GACdC,KAAMU,EAAOG,GAAGb,KAChBC,MAAOS,EAAOG,GAAGZ,YCCtBc,EAVG,SAAAjB,GAAoB,IAAlBkB,EAAkBlB,EAAlBkB,aAChB,OACId,EAAAC,EAAAC,cAAA,QAAA,CACIC,UAAU,mCACVY,KAAK,SAASC,YAAY,gBAC1BC,SAAUH,KCGPI,EARA,SAACC,GACZ,OACInB,EAAAC,EAAAC,cAAA,MAAA,CAAKkB,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEJ,EAAMK,WCcbC,8LAEEC,KAAKP,MAAMQ,mDAGN,IAAAC,EACsDF,KAAKP,MAAxDU,EADHD,EACGC,YAAaC,EADhBF,EACgBE,eAAgBtB,EADhCoB,EACgCpB,OAAQuB,EADxCH,EACwCG,UACvCC,EAAiBxB,EAAOyB,OAAO,SAAAC,GACjC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASP,EAAYM,iBAGzD,OACIJ,EAAY/B,EAAAC,EAAAC,cAAA,KAAA,KAAA,YACZF,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,KAAA,KAAA,eACAF,EAAAC,EAAAC,cAACmC,EAAD,CAAWvB,aAAcgB,IACzB9B,EAAAC,EAAAC,cAACoC,EAAD,KACItC,EAAAC,EAAAC,cAACqC,EAAD,CAAU/B,OAAQwB,aAjBpBQ,EAAAA,WAwBHC,EAAAA,OAAAA,EAAAA,EAAAA,CApCS,SAAAC,GAAK,MAAK,CAC9Bb,YAAaa,EAAMC,aAAad,YAChCrB,OAAQkC,EAAME,cAAcpC,OAC5BuB,UAAWW,EAAME,cAAcC,UAC/BC,MAAOJ,EAAME,cAAcE,QAGJ,SAAAC,GAAQ,MAAK,CACpCjB,eAAgB,SAAAkB,GAAK,OAAID,ECRU,CACnChC,KCR+B,sBDS/BkC,QDMiDD,EAAME,OAAOC,SAC9DxB,gBAAiB,WAAA,OAAMoB,ECJQ,SAAAA,GAC/BA,EAAS,CAAEhC,KCXuB,2BDYlCqC,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIT,EAAS,CAAEhC,KCbS,yBDaqBkC,QAASO,MAC/DC,MAAM,SAAAX,GAAK,OAAIC,EAAS,CAAEhC,KCbM,wBDauBkC,QAASH,WD0BtDL,CAGbhB,kBGvCIiC,EAAkB,CACpB7B,YAAa,IAYX8B,EAAkB,CACpB5B,WAAW,EACXvB,OAAQ,GACRsC,MAAO,ICbLc,eAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTd,KAAK,SAAAkB,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/B,QACf0B,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBrB,MAAM,SAAAX,GACL+B,QAAQ/B,MAAM,4CAA6CA,KC1DjE,IAAMiC,EAAcC,OAAAA,EAAAA,EAAAA,CAAgB,CAAErC,aFDV,WAA0C,IAAzCD,EAAyCuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCvB,EAAiB0B,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC3D,OAAOG,EAAOrE,MACV,IDb2B,sBCcvB,OAAOsE,OAAOC,OAAO,GAAI5C,EAAO,CAACb,YAAauD,EAAOnC,UACzD,QACI,OAAOP,IEJiCE,cFcvB,WAA0C,IAAzCF,EAAyCuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjCtB,EAAiByB,EAAgBH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAE5D,OADAJ,QAAQC,IAAI,WAAaM,EAAOnC,SACzBmC,EAAOrE,MACV,ID3B8B,yBC4B1B,OAAOsE,OAAOC,OAAO,GAAI5C,EAAO,CAACX,WAAW,IAChD,ID5B8B,yBC6B1B,OAAOsD,OAAOC,OAAO,GAAI5C,EAAO,CAAClC,OAAQ4E,EAAOnC,QAASlB,WAAW,IACxE,ID7B6B,wBC8BzB,OAAOsD,OAAOC,OAAO,GAAI5C,EAAO,CAACI,MAAOsC,EAAOnC,QAASlB,WAAW,IACvE,QACA,OAAOW,MEvBT6C,EAASC,OAAAA,EAAAA,aAAAA,GACTC,EAAQC,OAAAA,EAAAA,EAAAA,CAAYX,EAAaY,OAAAA,EAAAA,EAAAA,CAAgBC,EAAAA,EAAiBL,IAExEM,EAAAA,EAASC,OACL9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAUN,MAAOA,GACbzF,EAAAC,EAAAC,cAAC8F,EAAD,OAENC,SAASC,eAAe,SDAX,WACb,GAA6C,kBAAmB9B,UAAW,CAGzE,GADkB,IAAI+B,IAAIC,eAAwBtC,OAAOC,UAC3CsC,SAAWvC,OAAOC,SAASsC,OAIvC,OAGFvC,OAAOwC,iBAAiB,OAAQ,WAC9B,IAAMnC,EAAK,GAAA7D,OAAM8F,eAAN,sBAEPxC,EAwCV,SAAiCO,GAE/Bf,MAAMe,GACHd,KAAK,SAAAC,GAGkB,MAApBA,EAASiD,SACuD,IAAhEjD,EAASkD,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtC,UAAUC,cAAcsC,MAAMtD,KAAK,SAAAkB,GACjCA,EAAaqC,aAAavD,KAAK,WAC7BS,OAAOC,SAAS8C,aAKpB3C,EAAgBC,KAGnBV,MAAM,WACLoB,QAAQC,IACN,mEA5DAgC,CAAwB3C,GAGxBD,EAAgBC,MCjBxB4C\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({id, name, email}) => {\\n    return (\\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\\n            <img alt={name} src={`https://robohash.org/${id}/200x200`}/>\\n            <div>\\n                <h2>{name}</h2>\\n                <p>{email}</p>\\n            </div>\\n        </div>\\n    );\\n}\\n\\nexport default Card;\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n    return (\\n        <div>\\n           {\\n            robots.map((element, i) => {\\n                return < Card \\n                    id={robots[i].id} \\n                    name={robots[i].name} \\n                    email={robots[i].email}\\n                />\\n            })\\n           }\\n        </div>\\n    );\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({searchchange}) => {\\n    return(\\n        <input \\n            className='pa3 ba b--green bg-lightest-blue' \\n            type='search' placeholder='search robots' \\n            onChange={searchchange}\\n        />\\n    );\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n    return (\\n        <div style={{overflowY: 'scroll', border: '1px black solid', height: '800px'}}>\\n            {props.children}\\n        </div>\\n    );\\n}\\n\\nexport default Scroll;\",\"import React, { Component } from 'react';\\nimport { connect } from 'react-redux';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\nimport { setSearchField, requestRobots } from '../actions';\\n\\nconst mapStateToProps = state => ({\\n    searchField: state.searchRobots.searchField,\\n    robots: state.requestRobots.robots,\\n    isPending: state.requestRobots.ispending,\\n    error: state.requestRobots.error\\n});\\n\\nconst mapDispatchToProps = dispatch => ({\\n    onSearchChange: event => dispatch(setSearchField(event.target.value)),\\n    onRequestRobots: () => dispatch(requestRobots())\\n});\\n\\nclass App extends Component {\\n    componentDidMount() {\\n        this.props.onRequestRobots();\\n    }\\n    \\n    render() {\\n        const { searchField, onSearchChange, robots, isPending } = this.props\\n        const filteredRobots = robots.filter(robot => {\\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\\n        })\\n\\n        return(\\n            isPending ? <h1>LOADING!</h1> :\\n            <div className='tc'>\\n                <h1>RoboFriends</h1>\\n                <SearchBox searchchange={onSearchChange}/>\\n                <Scroll>\\n                    <CardList robots={filteredRobots} />\\n                </Scroll>\\n            </div>    \\n        );\\n    }\\n}\\n\\nexport default connect(\\n    mapStateToProps,\\n    mapDispatchToProps\\n)(App);\",\"import { \\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED\\n} from './constants.js';\\n\\nexport const setSearchField = text => ({\\n    type: CHANGE_SEARCH_FIELD,\\n    payload: text\\n})\\n\\nexport const requestRobots = () => dispatch => {\\n    dispatch({ type: REQUEST_ROBOTS_PENDING });\\n    fetch('https://jsonplaceholder.typicode.com/users')\\n    .then(response => response.json())\\n    .then(data => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\\n    .catch(error => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\\n}\\n\\n/*export const requestRobots = () => ({\\n    type: REQUEST_ROBOTS_SUCCESS,\\n    payload: [{\\n        name: 'bla'\\n    }]\\n})*/\",\"export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\\n\\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\",\"import { \\n    CHANGE_SEARCH_FIELD,\\n    REQUEST_ROBOTS_PENDING,\\n    REQUEST_ROBOTS_SUCCESS,\\n    REQUEST_ROBOTS_FAILED\\n} from './constants.js';\\n\\nconst initStateSearch = {\\n    searchField: ''\\n}\\n\\nexport const searchRobots = (state = initStateSearch, action = {}) => {\\n    switch(action.type) {\\n        case CHANGE_SEARCH_FIELD:\\n            return Object.assign({}, state, {searchField: action.payload});\\n        default:\\n            return state;\\n    }\\n}\\n\\nconst initStateRobots = {\\n    isPending: false,\\n    robots: [],\\n    error: ''\\n}\\n\\nexport const requestRobots = (state = initStateRobots, action = {}) => {\\n    console.log('payload ' + action.payload);\\n    switch(action.type){\\n        case REQUEST_ROBOTS_PENDING:\\n            return Object.assign({}, state, {isPending: true});\\n        case REQUEST_ROBOTS_SUCCESS:\\n            return Object.assign({}, state, {robots: action.payload, isPending: false});\\n        case REQUEST_ROBOTS_FAILED:\\n            return Object.assign({}, state, {error: action.payload, isPending: false});\\n        default:\\n        return state;\\n    }\\n}\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport thunkMiddleware from 'redux-thunk';\\nimport App from './containers/App';\\nimport { Provider } from 'react-redux';\\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\\nimport { createLogger } from 'redux-logger';\\nimport { searchRobots, requestRobots } from './reducers';\\nimport './index.css';\\nimport 'tachyons';\\nimport registerServiceWorker from './registerServiceWorker';\\n\\nconst rootReducer = combineReducers({ searchRobots, requestRobots })\\nconst logger = createLogger();\\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\\n\\nReactDOM.render(\\n    <Provider store={store}>\\n        <App/>\\n    </Provider>\\n, document.getElementById('root'));\\n\\nregisterServiceWorker();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{19:function(e,n,t){e.exports=t(32)},28:function(e,n,t){},32:function(e,n,t){\"use strict\";t.r(n);var o=t(0),r=t.n(o),a=t(9),i=t.n(a),c=t(10),s=t(11),l=t(12),u=t(17),d=t(13),h=t(18),f=t(3),g=function(e){var n=e.id,t=e.name,o=e.email;return r.a.createElement(\"div\",{className:\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"},r.a.createElement(\"img\",{alt:t,src:\"https://robohash.org/\".concat(n,\"/200x200\")}),r.a.createElement(\"div\",null,r.a.createElement(\"h2\",null,t),r.a.createElement(\"p\",null,o)))},b=function(e){var n=e.robots;return r.a.createElement(\"div\",null,n.map(function(e,t){return r.a.createElement(g,{id:n[t].id,name:n[t].name,email:n[t].email})}))},p=function(e){var n=e.searchchange;return r.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:n})},E=function(e){return r.a.createElement(\"div\",{style:{overflowY:\"scroll\",border:\"1px black solid\",height:\"800px\"}},e.children)},m=function(e){function n(){return Object(s.a)(this,n),Object(u.a)(this,Object(d.a)(n).apply(this,arguments))}return Object(h.a)(n,e),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){this.props.onRequestRobots()}},{key:\"render\",value:function(){var e=this.props,n=e.searchField,t=e.onSearchChange,o=e.robots,a=e.isPending,i=o.filter(function(e){return e.name.toLowerCase().includes(n.toLowerCase())});return a?r.a.createElement(\"h1\",null,\"LOADING!\"):r.a.createElement(\"div\",{className:\"tc\"},r.a.createElement(\"h1\",null,\"RoboFriends\"),r.a.createElement(p,{searchchange:t}),r.a.createElement(E,null,r.a.createElement(b,{robots:i})))}}]),n}(o.Component),v=Object(f.b)(function(e){return{searchField:e.searchRobots.searchField,robots:e.requestRobots.robots,isPending:e.requestRobots.ispending,error:e.requestRobots.error}},function(e){return{onSearchChange:function(n){return e({type:\"CHANGE_SEARCH_FIELD\",payload:n.target.value})},onRequestRobots:function(){return e(function(e){e({type:\"REQUEST_ROBOTS_PENDING\"}),fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(n){return e({type:\"REQUEST_ROBOTS_SUCCESS\",payload:n})}).catch(function(n){return e({type:\"REQUEST_ROBOTS_FAILED\",payload:n})})})}}})(m),w=t(2),O=t(16),R={searchField:\"\"},y={isPending:!1,robots:[],error:\"\"},S=(t(28),t(30),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)));function j(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}var _=Object(w.c)({searchRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:R,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(n.type){case\"CHANGE_SEARCH_FIELD\":return Object.assign({},e,{searchField:n.payload});default:return e}},requestRobots:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:y,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};switch(console.log(\"payload \"+n.payload),n.type){case\"REQUEST_ROBOTS_PENDING\":return Object.assign({},e,{isPending:!0});case\"REQUEST_ROBOTS_SUCCESS\":return Object.assign({},e,{robots:n.payload,isPending:!1});case\"REQUEST_ROBOTS_FAILED\":return Object.assign({},e,{error:n.payload,isPending:!1});default:return e}}}),C=Object(O.createLogger)(),F=Object(w.d)(_,Object(w.a)(c.a,C));i.a.render(r.a.createElement(f.a,{store:F},r.a.createElement(v,null)),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/RoboFriends\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"/RoboFriends\",\"/service-worker.js\");S?function(e){fetch(e).then(function(n){404===n.status||-1===n.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):j(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):j(e)})}}()}},[[19,2,1]]]);","extractedComments":[]}